{"version":3,"sources":["./$_lazy_route_resource lazy namespace object","./src/app/app-routing.module.ts","./src/app/app.component.ts","./src/app/app.component.html","./src/app/app.module.ts","./src/app/status-atividade.enum.ts","./src/environments/environment.ts","./src/main.ts"],"names":[],"mappings":"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","file":"main.js","sourcesContent":["function webpackEmptyAsyncContext(req) {\n\t// Here Promise.resolve().then() is used instead of new Promise() to prevent\n\t// uncaught exception popping up in devtools\n\treturn Promise.resolve().then(function() {\n\t\tvar e = new Error(\"Cannot find module '\" + req + \"'\");\n\t\te.code = 'MODULE_NOT_FOUND';\n\t\tthrow e;\n\t});\n}\nwebpackEmptyAsyncContext.keys = function() { return []; };\nwebpackEmptyAsyncContext.resolve = webpackEmptyAsyncContext;\nmodule.exports = webpackEmptyAsyncContext;\nwebpackEmptyAsyncContext.id = \"./$$_lazy_route_resource lazy recursive\";","import { NgModule } from '@angular/core';\nimport { Routes, RouterModule } from '@angular/router';\n\nconst routes: Routes = [];\n\n@NgModule({\n  imports: [RouterModule.forRoot(routes)],\n  exports: [RouterModule]\n})\nexport class AppRoutingModule { }\n","import { Component, OnInit } from '@angular/core';\nimport { FormGroup, FormBuilder } from '@angular/forms';\nimport { HttpClient, HttpParams  } from '@angular/common/http';\nimport { environment } from 'src/environments/environment';\nimport { StatusAtividade } from 'src/app/status-atividade.enum';\n\n@Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss']\n})\nexport class AppComponent implements OnInit{\n  \n  toDoForm: FormGroup;\n  atividades:Array<Atividade>;\n\n  constructor(private formBuilder: FormBuilder, private http: HttpClient) { }\n\n  ngOnInit() {\n    this.toDoForm = this.formBuilder.group({\n      atividade: [null]\n    });\n    this.listAtividades();\n  }\n\n  add() {\n    if(this.toDoForm.get('atividade').value != null) {\n      const body = { descricao: this.toDoForm.get('atividade').value };\n      this.http.put<Atividade>(environment.apiURL + '/atividade/adicionar', body)\n        .subscribe(data => { \n          this.listAtividades();\n        });\n      this.toDoForm.reset();\n    } else {\n      alert('Informe uma atividade!');\n    }\n  }\n\n  listAtividades() {\n    this.http.get<any>(environment.apiURL + '/atividade/list')\n      .subscribe(data => { \n        this.atividades = data \n      });\n  }\n\n  excluir(index: number) {\n    const params = new HttpParams().set('id', this.atividades[index].id.toString());\n    this.http.delete<any>(environment.apiURL + '/atividade/excluir', {params})\n      .subscribe(data => {\n        this.listAtividades();\n      });\n  }\n\n  concluir(index: number) {\n    const body = this.atividades[index].id \n    if(this.atividades[index].status == StatusAtividade.A_FAZER) {\n      this.http.post<any>(environment.apiURL + '/atividade/feito', body)\n        .subscribe();\n    } else {\n      this.http.post<any>(environment.apiURL + '/atividade/fazer', body)\n      .subscribe();\n    }\n  }\n}\n\ninterface Atividade {\n  id: number;\n  descricao: string;\n  status: StatusAtividade;\n  data: Date;\n}\n","<div class=\"container\">\n  <h1>To do List</h1>\n  <div class=\"form-container\">\n    <form [formGroup]=\"toDoForm\" (submit)=\"add()\">\n\n      <mat-form-field class=\"form-field\" appearance=\"outline\">\n        <mat-label>O que precisa ser feito?</mat-label>\n        <textarea maxlength=\"255\" matInput formControlName=\"atividade\"></textarea>\n      </mat-form-field>\n\n      <button mat-raised-button color=\"primary\" style=\"float: right;\">Adicionar</button>\n    </form>\n  </div>\n\n  <div style=\"margin-top: 10%;\">\n    <h1>Atividades</h1>\n    <mat-card *ngFor=\"let atividade of atividades; let i = index\" [attr.data-index]=\"i\" style=\"margin-bottom: 2%;\">\n      <mat-checkbox *ngIf=\"atividade.status == 'A_FAZER'\" class=\"example-margin\" (click)=\"concluir(i)\">\n        {{atividade.descricao}}</mat-checkbox>\n      <mat-checkbox *ngIf=\"atividade.status == 'FEITO'\" checked=\"true\" class=\"example-margin\" (click)=\"concluir(i)\">\n        {{atividade.descricao}}</mat-checkbox>\n      <button class=\"mdc-icon-button material-icons\" (click)=\"excluir(i)\" style=\"float: right;\">delete</button>\n\n    </mat-card><br>\n\n  </div>\n\n</div>","import { BrowserModule } from '@angular/platform-browser';\nimport { NgModule } from '@angular/core';\n\nimport { AppRoutingModule } from './app-routing.module';\nimport { AppComponent } from './app.component';\nimport { BrowserAnimationsModule } from '@angular/platform-browser/animations';\nimport { MatFormFieldModule } from '@angular/material/form-field';\nimport { MatInputModule } from '@angular/material/input';\nimport { MatCardModule } from '@angular/material/card';\nimport { MatCheckboxModule } from '@angular/material/checkbox';\nimport { ReactiveFormsModule } from '@angular/forms';\nimport { MatButtonModule } from '@angular/material/button';\nimport { HttpClientModule } from '@angular/common/http';\n\n@NgModule({\n  declarations: [\n    AppComponent\n  ],\n  imports: [\n    BrowserModule,\n    AppRoutingModule,\n    BrowserAnimationsModule,\n    MatFormFieldModule,\n    MatInputModule,\n    ReactiveFormsModule,\n    MatButtonModule,\n    HttpClientModule,\n    MatCardModule,\n    MatCheckboxModule\n  ],\n  providers: [],\n  bootstrap: [AppComponent]\n})\nexport class AppModule { }\n","export enum StatusAtividade {\n\n    A_FAZER = \"A_FAZER\",\n    FEITO = \"FEITO\",\n\n}\n","// This file can be replaced during build by using the `fileReplacements` array.\n// `ng build --prod` replaces `environment.ts` with `environment.prod.ts`.\n// The list of file replacements can be found in `angular.json`.\n\nexport const environment = {\n  production: false,\n  apiURL: 'http://localhost:8080'\n};\n\n/*\n * For easier debugging in development mode, you can import the following file\n * to ignore zone related error stack frames such as `zone.run`, `zoneDelegate.invokeTask`.\n *\n * This import should be commented out in production mode because it will have a negative impact\n * on performance if an error is thrown.\n */\n// import 'zone.js/dist/zone-error';  // Included with Angular CLI.\n","import { enableProdMode } from '@angular/core';\nimport { platformBrowserDynamic } from '@angular/platform-browser-dynamic';\n\nimport { AppModule } from './app/app.module';\nimport { environment } from './environments/environment';\n\nif (environment.production) {\n  enableProdMode();\n}\n\nplatformBrowserDynamic().bootstrapModule(AppModule)\n  .catch(err => console.error(err));\n"],"sourceRoot":"webpack:///"}